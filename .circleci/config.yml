version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build:
    # Remove if parallelism is not desired
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx1g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    machine:
      image: cimg/openjdk:11
    steps: # a collection of executable commands
      - run:
          name: Pre-install
          command: |
            java -version
      - checkout # check out source code to working directory
      - run: |
          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
      - run:
          name: Run tests in parallel # See: https://circleci.com/docs/2.0/parallelism-faster-jobs/
          # Use "./gradlew test" instead if tests are not run in parallel
          command: |
            echo "current path: $PWD"
            pwd ~
            echo "$SHEETKEY" >~/sheetkey.json
            echo "homedir:"
            ls -l ~
            export GOOGLE_SHEETS_CREDENTIAL_PATH=~/sheetkey.json
            # Format the arguments to "./gradlew test"
            ./gradlew test --info --stacktrace
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
            ls -lR ~/test-results/junit/
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - run:
          name: Assemble JAR
          command: |
            # Skip this for other nodes
            if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
              ./gradlew assemble codeCoverageReport
            fi
      # As the JAR was only assembled in the first build container, build/libs will be empty in all the other build containers.
      - store_artifacts:
          path: build/libs
      - store_artifacts:
          destination: jacocoHtml
          path: build/reports/jacoco/codeCoverageReport/html
      - store_artifacts:
          destination: jacocoXml
          path: build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml
      - run:
          command: fossa analyze
          working_directory: ~
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - run:
          name: Upload to central
          command: |
            ./gradlew publishAllPublicationsToSnapshotsRepository
workflows:
  version: 2
  workflow:
    jobs:
      - build
