plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.plugin.allopen"
    id 'io.quarkus' version "${quarkusPluginVersion}"
}

apply from: "$rootProject.projectDir/gradle/shared.gradle"
def globalConf = rootProject.ext

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    gradlePluginPortal()
    google()
    maven {
        url "http://packages.confluent.io/maven"
    }
}

dependencies {
    Map<String, String> dependencies = globalConf.commonDependencies
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-arc'
    implementation (dependencies.debeziumCore)
    implementation (dependencies.debeziumServerCore)
    implementation (dependencies.debeziumPostgres)
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation(project(":floodplain-mongodb"))
    implementation(project(":floodplain-dsl"))
    implementation(project(":floodplain-integration"))
    implementation(dependencies.kafkaClient)
    implementation(dependencies.kafkaStreams)
    implementation(dependencies.kafkaConnectApi)
    implementation(dependencies.kafkaConnectRuntime)

}

quarkus {
    setOutputDirectory("$projectDir/build/classes/kotlin/main")
}

quarkusDev {
    setSourceDir("$projectDir/src/main/kotlin")
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
