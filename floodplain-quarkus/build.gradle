plugins {
  id "com.palantir.docker" version "0.25.0"
}
def globalConf = rootProject.ext

docker {
    Map<String, String> dependencies = globalConf.commonDependencies
    dockerfile file('src/main/docker/Dockerfile.jvm')
    name "floodplain/floodplain:$version"
    dependsOn build
    files 'build'
    buildArgs([VERSION: version])
}

publishing {
    publications {
        dockerPublication(MavenPublication) {
            from components.docker
            artifactId project.name + "-docker"
        }
    }
}

dependencies {
    Map<String, String> dependencies = globalConf.commonDependencies
    compile dependencies.slf4j
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-agroal'
    implementation 'io.quarkus:quarkus-vertx'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'
    implementation project(':floodplain-stream-topology')
    implementation project(':config-runtime')
    implementation project(':immutable-api')
    implementation project(':immutable-impl')
    implementation project(':replication-api')
    implementation project(':replication-impl')
    implementation project(':replication-json')
    implementation project(':replication-protobuf')
    implementation project(':streams-api')
    implementation project(':streams')
    implementation project(':kafka-rx2')
    implementation project(':pubsub-rx2')
    implementation project(':kafka-converter')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}
